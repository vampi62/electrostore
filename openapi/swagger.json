{
  "openapi": "3.0.1",
  "info": {
    "title": "ElectroStore API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "{baseUrl}",
      "description": "URL de base personnalisable",
      "variables": {
        "baseUrl": {
          "default": "https://exemple.com",
          "description": "URL de base personnalis√©e",
          "examples": [
            "https://api.exemple.com",
            "https://staging-api.exemple.com",
            "http://localhost:8080"
          ]
        }
      }
    }
  ],
  "host": "{baseUrl}",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/auth/{sso_method}/url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "sso_method",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SsoUrlResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SsoUrlResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SsoUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/{sso_method}/callback": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "sso_method",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SsoLoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SsoLoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SsoLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camera": {
      "get": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCameraDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCameraDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCameraDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Camera"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCameraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCameraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCameraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camera/{id_camera}": {
      "get": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCameraDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCameraDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camera/{id_camera}/stream": {
      "get": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camera/{id_camera}/light": {
      "post": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraLightDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraLightDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CameraLightDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraLightDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraLightDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraLightDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camera/{id_camera}/capture": {
      "get": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camera/{id_camera}/status": {
      "get": {
        "tags": [
          "Camera"
        ],
        "parameters": [
          {
            "name": "id_camera",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CameraStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CameraStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/command": {
      "get": {
        "tags": [
          "Command"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'commands_commentaires', 'commands_documents', 'commands_items'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Command"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/command/{id_command}": {
      "get": {
        "tags": [
          "Command"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'commands_commentaires', 'commands_documents', 'commands_items'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Command"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Command"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/command/{id_command}/commentaire": {
      "get": {
        "tags": [
          "CommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandCommentaireByCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandCommentaireByCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandCommentaireByCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/command/{id_command}/commentaire/{id_command_commentaire}": {
      "get": {
        "tags": [
          "CommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/command/{id_command}/document": {
      "get": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCommandDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCommandDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadCommandDocumentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document",
                  "name_command_document"
                ],
                "type": "object",
                "properties": {
                  "name_command_document": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "document": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "name_command_document": {
                  "style": "form"
                },
                "document": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/command/{id_command}/document/{id_commandDocument}": {
      "get": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_commandDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_commandDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandDocumentDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_commandDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/command/{id_command}/document/{id_commandDocument}/download": {
      "get": {
        "tags": [
          "CommandDocument"
        ],
        "parameters": [
          {
            "name": "id_commandDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/command/{id_command}/item": {
      "get": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/command/{id_command}/item/{id_item}": {
      "get": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/command/{id_command}/item/bulk": {
      "post": {
        "tags": [
          "CommandItem"
        ],
        "parameters": [
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByCommandDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "Config"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/ia": {
      "get": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadIADto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadIADto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadIADto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IA"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIADto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIADto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIADto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ia/{id_ia}": {
      "get": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIADto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIADto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIADto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadIADto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ia/{id_ia}/status": {
      "get": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IAStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IAStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IAStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ia/{id_ia}/train": {
      "post": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ia/{id_ia}/detect": {
      "post": {
        "tags": [
          "IA"
        ],
        "parameters": [
          {
            "name": "id_ia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "img_file"
                ],
                "type": "object",
                "properties": {
                  "img_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "img_file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/item": {
      "get": {
        "tags": [
          "Item"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item_tags', 'item_boxs', 'command_items', 'projet_items', 'item_documents'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Item"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}": {
      "get": {
        "tags": [
          "Item"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item_tags', 'item_boxs', 'command_items', 'projet_items', 'item_documents'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Item"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Item"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/box": {
      "get": {
        "tags": [
          "ItemBox"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemBox"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/box/{id_box}": {
      "get": {
        "tags": [
          "ItemBox"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemBox"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemBox"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/command": {
      "get": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandItemByItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/command/{id_command}": {
      "get": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/command/bulk": {
      "post": {
        "tags": [
          "ItemCommand"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByItemDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByItemDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCommandItemByItemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkCommandItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/document": {
      "get": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadItemDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadItemDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadItemDocumentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document",
                  "name_item_document"
                ],
                "type": "object",
                "properties": {
                  "name_item_document": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "document": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "name_item_document": {
                  "style": "form"
                },
                "document": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/document/{id_itemDocument}": {
      "get": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_itemDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_itemDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemDocumentDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_itemDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/document/{id_itemDocument}/download": {
      "get": {
        "tags": [
          "ItemDocument"
        ],
        "parameters": [
          {
            "name": "id_itemDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/img": {
      "get": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadImgDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadImgDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadImgDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "description_img",
                  "img_file",
                  "nom_img"
                ],
                "type": "object",
                "properties": {
                  "nom_img": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "description_img": {
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string"
                  },
                  "img_file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "nom_img": {
                  "style": "form"
                },
                "description_img": {
                  "style": "form"
                },
                "img_file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/img/{id_img}": {
      "get": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_img",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_img",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImgDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImgDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImgDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadImgDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_img",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/img/{id_img}/picture": {
      "get": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_img",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/img/{id_img}/thumbnail": {
      "get": {
        "tags": [
          "ItemImg"
        ],
        "parameters": [
          {
            "name": "id_img",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/projet": {
      "get": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/projet/{id_projet}": {
      "get": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/projet/bulk": {
      "post": {
        "tags": [
          "ItemProjet"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByItemDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByItemDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByItemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/tag": {
      "get": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id_item}/tag/{id_tag}": {
      "get": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/item/{id_item}/tag/bulk": {
      "post": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByItemDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByItemDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByItemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemTag"
        ],
        "parameters": [
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet": {
      "get": {
        "tags": [
          "Projet"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_commentaires', 'projets_documents', 'projets_items', 'projets_projet_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projet"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}": {
      "get": {
        "tags": [
          "Projet"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_commentaires', 'projets_documents', 'projets_items'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projet"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projet"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/commentaire": {
      "get": {
        "tags": [
          "ProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetCommentaireByProjetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetCommentaireByProjetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetCommentaireByProjetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}/commentaire/{id_projet_commentaire}": {
      "get": {
        "tags": [
          "ProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/document": {
      "get": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadProjetDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadProjetDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadProjetDocumentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "document",
                  "name_projet_document"
                ],
                "type": "object",
                "properties": {
                  "name_projet_document": {
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "document": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "name_projet_document": {
                  "style": "form"
                },
                "document": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}/document/{id_projetDocument}": {
      "get": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projetDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projetDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetDocumentDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projetDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/document/{id_projetDocument}/download": {
      "get": {
        "tags": [
          "ProjetDocument"
        ],
        "parameters": [
          {
            "name": "id_projetDocument",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/item": {
      "get": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}/item/{id_item}": {
      "get": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetItemDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetItemDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/item/bulk": {
      "post": {
        "tags": [
          "ProjetItem"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetItemByProjetDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}/projet-tag": {
      "get": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet_tag', 'projet'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet/{id_projet}/projet-tag/{id_projet_tag}": {
      "get": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet_tag', 'projet'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet/{id_projet}/projet-tag/bulk": {
      "post": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet-tag": {
      "get": {
        "tags": [
          "ProjetTag"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_projet_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetTag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet-tag/{id_projet_tag}": {
      "get": {
        "tags": [
          "ProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_projet_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetTag"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet-tag/bulk": {
      "post": {
        "tags": [
          "ProjetTag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet-tag/{id_projet_tag}/projet": {
      "get": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet_tag', 'projet'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjetProjetTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetProjetTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/projet-tag/{id_projet_tag}/projet/{id_projet}": {
      "get": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet_tag', 'projet'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetProjetTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/projet-tag/{id_projet_tag}/projet/bulk": {
      "post": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProjetProjetTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjetTagProjet"
        ],
        "parameters": [
          {
            "name": "id_projet_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkProjetProjetTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/box": {
      "get": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'store', 'box_tags', 'item_boxs'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxByStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxByStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxByStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}": {
      "get": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'store', 'box_tags', 'item_boxs'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoxByStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoxByStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoxByStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/box/bulk": {
      "post": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxByStoreDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxByStoreDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxByStoreDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkBoxByStoreDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkBoxByStoreDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkBoxByStoreDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/show": {
      "post": {
        "tags": [
          "StoreBox"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "red",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "green",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeshow",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "animation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/item": {
      "get": {
        "tags": [
          "StoreBoxItem"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StoreBoxItem"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByBoxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByBoxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBoxByBoxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/item/{id_item}": {
      "get": {
        "tags": [
          "StoreBoxItem"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'item', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemBoxDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreBoxItem"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBoxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemBoxDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreBoxItem"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/tag": {
      "get": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/tag/{id_tag}": {
      "get": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/box/{id_box}/tag/bulk": {
      "post": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByBoxDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreBoxTag"
        ],
        "parameters": [
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/led": {
      "get": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadLedDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadLedDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadLedDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLedByStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLedByStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLedByStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/led/{id_led}": {
      "get": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_led",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_led",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLedByStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLedByStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLedByStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadLedDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_led",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/led/bulk": {
      "post": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateLedByStoreDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateLedByStoreDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateLedByStoreDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkLedByStoreDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkLedByStoreDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateBulkLedByStoreDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkLedDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/led/{id_led}/show": {
      "post": {
        "tags": [
          "StoreLed"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_led",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "red",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "green",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "blue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeshow",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "animation",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'boxs', 'leds', 'stores_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stores"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}": {
      "get": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'boxs', 'leds', 'stores_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/complete": {
      "post": {
        "tags": [
          "Stores"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreCompleteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreCompleteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreCompleteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/complete": {
      "put": {
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreCompleteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreCompleteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreCompleteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreCompleteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/tag": {
      "get": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'store'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/store/{id_store}/tag/{id_tag}": {
      "get": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'store'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/store/{id_store}/tag/bulk": {
      "post": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByStoreDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StoreTag"
        ],
        "parameters": [
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'stores_tags', 'items_tags', 'boxs_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'stores_tags', 'items_tags', 'boxs_tags'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedTagDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tag/bulk": {
      "post": {
        "tags": [
          "Tag"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/box": {
      "get": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoxTagByTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBoxTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/box/{id_box}": {
      "get": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'box'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedBoxTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_box",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tag/{id_tag}/box/bulk": {
      "post": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateBoxTagByTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagBox"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkBoxTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/item": {
      "get": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemTagByTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/item/{id_item}": {
      "get": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'item'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedItemTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_item",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tag/{id_tag}/item/bulk": {
      "post": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateItemTagByTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagItem"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkItemTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/store": {
      "get": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'store'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByTagDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByTagDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreTagByTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadStoreTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/tag/{id_tag}/store/{id_store}": {
      "get": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'tag', 'store'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedStoreTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_store",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tag/{id_tag}/store/bulk": {
      "post": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByTagDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByTagDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateStoreTagByTagDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagStore"
        ],
        "parameters": [
          {
            "name": "id_tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadBulkStoreTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_commentaires', 'commands_commentaires'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "idResearch",
            "in": "query",
            "description": "(Optional) Fields to select list of ID to research in the base. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedUserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedUserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedUserDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id_user}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projets_commentaires', 'commands_commentaires'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedUserDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUserDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/{id_user}/command_commentaire": {
      "get": {
        "tags": [
          "UserCommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id_user}/command_commentaire/{id_command_commentaire}": {
      "get": {
        "tags": [
          "UserCommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'command', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedCommandCommentaireDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserCommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandCommentaireDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadCommandCommentaireDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserCommandCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_command_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/{id_user}/projet_commentaire": {
      "get": {
        "tags": [
          "UserProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id_user}/projet_commentaire/{id_projet_commentaire}": {
      "get": {
        "tags": [
          "UserProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "(Optional) Fields to expand. Possible values: 'projet', 'user'. Multiple values can be specified by separating them with ','.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadExtendedProjetCommentaireDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjetCommentaireDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadProjetCommentaireDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserProjetCommentaire"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id_projet_commentaire",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/{id_user}/sessions": {
      "get": {
        "tags": [
          "UserToken"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "show_revoked",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "show_expired",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of items",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{id_user}/sessions/{session_id}": {
      "get": {
        "tags": [
          "UserToken"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_revoked",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "show_expired",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserToken"
        ],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccessTokenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccessTokenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccessTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CameraLightDto": {
        "type": "object",
        "properties": {
          "state": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CameraStatusDto": {
        "type": "object",
        "properties": {
          "network": {
            "type": "boolean"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "uptime": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "espModel": {
            "type": "string",
            "nullable": true
          },
          "espTemperature": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "otaWait": {
            "type": "string",
            "nullable": true
          },
          "otaUploading": {
            "type": "string",
            "nullable": true
          },
          "otaError": {
            "type": "string",
            "nullable": true
          },
          "otaTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "otaRemainingTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "otaPercentage": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "ringLightPower": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "versionScanBox": {
            "type": "string",
            "nullable": true
          },
          "cameraResolution": {
            "type": "string",
            "nullable": true
          },
          "cameraPID": {
            "type": "string",
            "nullable": true
          },
          "wifiSignalStrength": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBoxByStoreDto": {
        "required": [
          "xend_box",
          "xstart_box",
          "yend_box",
          "ystart_box"
        ],
        "type": "object",
        "properties": {
          "xstart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "ystart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "xend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "yend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateBoxTagByBoxDto": {
        "required": [
          "id_tag"
        ],
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateBoxTagByTagDto": {
        "required": [
          "id_box"
        ],
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateCameraDto": {
        "required": [
          "nom_camera",
          "url_camera"
        ],
        "type": "object",
        "properties": {
          "nom_camera": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "url_camera": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "user_camera": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "mdp_camera": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommandCommentaireByCommandDto": {
        "required": [
          "contenu_command_commentaire"
        ],
        "type": "object",
        "properties": {
          "contenu_command_commentaire": {
            "maxLength": 455,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateCommandDto": {
        "required": [
          "date_command",
          "prix_command",
          "status_command",
          "url_command"
        ],
        "type": "object",
        "properties": {
          "prix_command": {
            "minimum": 0,
            "type": "number",
            "format": "float"
          },
          "url_command": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "status_command": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "date_command": {
            "type": "string",
            "format": "date-time"
          },
          "date_livraison_command": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommandItemByCommandDto": {
        "required": [
          "id_item",
          "prix_command_item",
          "qte_command_item"
        ],
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_command_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "prix_command_item": {
            "minimum": 0,
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CreateCommandItemByItemDto": {
        "required": [
          "id_command",
          "prix_command_item",
          "qte_command_item"
        ],
        "type": "object",
        "properties": {
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "qte_command_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "prix_command_item": {
            "minimum": 0,
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "CreateIADto": {
        "required": [
          "description_ia",
          "nom_ia"
        ],
        "type": "object",
        "properties": {
          "nom_ia": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description_ia": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateItemBoxByBoxDto": {
        "required": [
          "id_item",
          "qte_item_box",
          "seuil_max_item_item_box"
        ],
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_item_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "seuil_max_item_item_box": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateItemBoxByItemDto": {
        "required": [
          "id_box",
          "qte_item_box",
          "seuil_max_item_item_box"
        ],
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "qte_item_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "seuil_max_item_item_box": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateItemDto": {
        "required": [
          "description_item",
          "friendly_name_item",
          "reference_name_item",
          "seuil_min_item"
        ],
        "type": "object",
        "properties": {
          "reference_name_item": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "friendly_name_item": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "seuil_min_item": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "description_item": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "id_img": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateItemTagByItemDto": {
        "required": [
          "id_tag"
        ],
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateItemTagByTagDto": {
        "required": [
          "id_item"
        ],
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateLedByStoreDto": {
        "required": [
          "mqtt_led_id",
          "x_led",
          "y_led"
        ],
        "type": "object",
        "properties": {
          "x_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "y_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "mqtt_led_id": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProjetCommentaireByProjetDto": {
        "required": [
          "contenu_projet_commentaire"
        ],
        "type": "object",
        "properties": {
          "contenu_projet_commentaire": {
            "maxLength": 455,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateProjetDto": {
        "required": [
          "date_debut_projet",
          "description_projet",
          "nom_projet",
          "status_projet",
          "url_projet"
        ],
        "type": "object",
        "properties": {
          "nom_projet": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description_projet": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "url_projet": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "status_projet": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "date_debut_projet": {
            "type": "string",
            "format": "date-time"
          },
          "date_fin_projet": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProjetItemByItemDto": {
        "required": [
          "id_projet",
          "qte_projet_item"
        ],
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "qte_projet_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProjetItemByProjetDto": {
        "required": [
          "id_item",
          "qte_projet_item"
        ],
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_projet_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProjetProjetTagDto": {
        "required": [
          "id_projet",
          "id_projet_tag"
        ],
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet_tag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProjetTagDto": {
        "required": [
          "nom_projet_tag",
          "poids_projet_tag"
        ],
        "type": "object",
        "properties": {
          "nom_projet_tag": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "poids_projet_tag": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateStoreCompleteDto": {
        "type": "object",
        "properties": {
          "store": {
            "$ref": "#/components/schemas/CreateStoreDto"
          },
          "boxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateBoxByStoreDto"
            },
            "nullable": true
          },
          "leds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateLedByStoreDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateStoreDto": {
        "required": [
          "mqtt_name_store",
          "nom_store",
          "xlength_store",
          "ylength_store"
        ],
        "type": "object",
        "properties": {
          "nom_store": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "xlength_store": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "ylength_store": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "mqtt_name_store": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateStoreTagByStoreDto": {
        "required": [
          "id_tag"
        ],
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateStoreTagByTagDto": {
        "required": [
          "id_store"
        ],
        "type": "object",
        "properties": {
          "id_store": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateTagDto": {
        "required": [
          "nom_tag",
          "poids_tag"
        ],
        "type": "object",
        "properties": {
          "nom_tag": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "poids_tag": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "required": [
          "email_user",
          "mdp_user",
          "nom_user",
          "prenom_user",
          "role_user"
        ],
        "type": "object",
        "properties": {
          "nom_user": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "prenom_user": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "email_user": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "mdp_user": {
            "minLength": 1,
            "type": "string"
          },
          "role_user": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IAStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "epoch": {
            "type": "integer",
            "format": "int32"
          },
          "accuracy": {
            "type": "number",
            "format": "float"
          },
          "valAccuracy": {
            "type": "number",
            "format": "float"
          },
          "loss": {
            "type": "number",
            "format": "float"
          },
          "valLoss": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expire_date_token": {
            "type": "string",
            "format": "date-time"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "expire_date_refresh_token": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/ReadUserDto"
          }
        },
        "additionalProperties": false
      },
      "PredictionOutput": {
        "type": "object",
        "properties": {
          "predictedLabel": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "ReadBoxDto": {
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "xstart_box": {
            "type": "integer",
            "format": "int32"
          },
          "ystart_box": {
            "type": "integer",
            "format": "int32"
          },
          "xend_box": {
            "type": "integer",
            "format": "int32"
          },
          "yend_box": {
            "type": "integer",
            "format": "int32"
          },
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadBoxTagDto": {
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadBulkBoxDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadBoxDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkBoxTagDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadBoxTagDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkCommandItemDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandItemDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkItemTagDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemTagDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkLedDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadLedDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkProjetItemDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetItemDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkProjetProjetTagDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetProjetTagDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkStoreTagDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadStoreTagDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadBulkTagDto": {
        "type": "object",
        "properties": {
          "valide": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadTagDto"
            },
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadCameraDto": {
        "type": "object",
        "properties": {
          "id_camera": {
            "type": "integer",
            "format": "int32"
          },
          "nom_camera": {
            "type": "string",
            "nullable": true
          },
          "url_camera": {
            "type": "string",
            "nullable": true
          },
          "user_camera": {
            "type": "string",
            "nullable": true
          },
          "mdp_camera": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadCommandCommentaireDto": {
        "type": "object",
        "properties": {
          "id_command_commentaire": {
            "type": "integer",
            "format": "int32"
          },
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "id_user": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contenu_command_commentaire": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadCommandDocumentDto": {
        "type": "object",
        "properties": {
          "id_command_document": {
            "type": "integer",
            "format": "int32"
          },
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "url_command_document": {
            "type": "string",
            "nullable": true
          },
          "name_command_document": {
            "type": "string",
            "nullable": true
          },
          "type_command_document": {
            "type": "string",
            "nullable": true
          },
          "size_command_document": {
            "type": "number",
            "format": "double"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadCommandDto": {
        "type": "object",
        "properties": {
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "prix_command": {
            "type": "number",
            "format": "float"
          },
          "url_command": {
            "type": "string",
            "nullable": true
          },
          "status_command": {
            "type": "string",
            "nullable": true
          },
          "date_command": {
            "type": "string",
            "format": "date-time"
          },
          "date_livraison_command": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadCommandItemDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "qte_command_item": {
            "type": "integer",
            "format": "int32"
          },
          "prix_command_item": {
            "type": "number",
            "format": "float"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadConfig": {
        "type": "object",
        "properties": {
          "smtp_enabled": {
            "type": "boolean"
          },
          "mqtt_connected": {
            "type": "boolean"
          },
          "ia_service_status": {
            "type": "string",
            "nullable": true
          },
          "demo_mode": {
            "type": "boolean"
          },
          "max_length_url": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_commentaire": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_description": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_name": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_type": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_email": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_ip": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_reason": {
            "type": "integer",
            "format": "int32"
          },
          "max_length_status": {
            "type": "integer",
            "format": "int32"
          },
          "max_size_document_in_mb": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedBoxDto": {
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "xstart_box": {
            "type": "integer",
            "format": "int32"
          },
          "ystart_box": {
            "type": "integer",
            "format": "int32"
          },
          "xend_box": {
            "type": "integer",
            "format": "int32"
          },
          "yend_box": {
            "type": "integer",
            "format": "int32"
          },
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "store": {
            "$ref": "#/components/schemas/ReadStoreDto"
          },
          "box_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "item_boxs_count": {
            "type": "integer",
            "format": "int32"
          },
          "box_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadBoxTagDto"
            },
            "nullable": true
          },
          "item_boxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemBoxDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedBoxTagDto": {
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "tag": {
            "$ref": "#/components/schemas/ReadTagDto"
          },
          "box": {
            "$ref": "#/components/schemas/ReadBoxDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedCommandCommentaireDto": {
        "type": "object",
        "properties": {
          "id_command_commentaire": {
            "type": "integer",
            "format": "int32"
          },
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "id_user": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contenu_command_commentaire": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "command": {
            "$ref": "#/components/schemas/ReadCommandDto"
          },
          "user": {
            "$ref": "#/components/schemas/ReadUserDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedCommandDto": {
        "type": "object",
        "properties": {
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "prix_command": {
            "type": "number",
            "format": "float"
          },
          "url_command": {
            "type": "string",
            "nullable": true
          },
          "status_command": {
            "type": "string",
            "nullable": true
          },
          "date_command": {
            "type": "string",
            "format": "date-time"
          },
          "date_livraison_command": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "commands_commentaires_count": {
            "type": "integer",
            "format": "int32"
          },
          "commands_documents_count": {
            "type": "integer",
            "format": "int32"
          },
          "commands_items_count": {
            "type": "integer",
            "format": "int32"
          },
          "commands_commentaires": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandCommentaireDto"
            },
            "nullable": true
          },
          "commands_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandDocumentDto"
            },
            "nullable": true
          },
          "commands_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedCommandItemDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "id_command": {
            "type": "integer",
            "format": "int32"
          },
          "qte_command_item": {
            "type": "integer",
            "format": "int32"
          },
          "prix_command_item": {
            "type": "number",
            "format": "float"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "item": {
            "$ref": "#/components/schemas/ReadItemDto"
          },
          "command": {
            "$ref": "#/components/schemas/ReadCommandDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedItemBoxDto": {
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_item_box": {
            "type": "integer",
            "format": "int32"
          },
          "seuil_max_item_item_box": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "item": {
            "$ref": "#/components/schemas/ReadItemDto"
          },
          "box": {
            "$ref": "#/components/schemas/ReadBoxDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedItemDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "reference_name_item": {
            "type": "string",
            "nullable": true
          },
          "friendly_name_item": {
            "type": "string",
            "nullable": true
          },
          "seuil_min_item": {
            "type": "integer",
            "format": "int32"
          },
          "description_item": {
            "type": "string",
            "nullable": true
          },
          "id_img": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "item_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "item_boxs_count": {
            "type": "integer",
            "format": "int32"
          },
          "command_items_count": {
            "type": "integer",
            "format": "int32"
          },
          "projet_items_count": {
            "type": "integer",
            "format": "int32"
          },
          "item_documents_count": {
            "type": "integer",
            "format": "int32"
          },
          "item_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemTagDto"
            },
            "nullable": true
          },
          "item_boxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemBoxDto"
            },
            "nullable": true
          },
          "command_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandItemDto"
            },
            "nullable": true
          },
          "projet_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetItemDto"
            },
            "nullable": true
          },
          "item_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemDocumentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedItemTagDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "item": {
            "$ref": "#/components/schemas/ReadItemDto"
          },
          "tag": {
            "$ref": "#/components/schemas/ReadTagDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedProjetCommentaireDto": {
        "type": "object",
        "properties": {
          "id_projet_commentaire": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_user": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contenu_projet_commentaire": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "projet": {
            "$ref": "#/components/schemas/ReadProjetDto"
          },
          "user": {
            "$ref": "#/components/schemas/ReadUserDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedProjetDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "nom_projet": {
            "type": "string",
            "nullable": true
          },
          "description_projet": {
            "type": "string",
            "nullable": true
          },
          "url_projet": {
            "type": "string",
            "nullable": true
          },
          "status_projet": {
            "type": "string",
            "nullable": true
          },
          "date_debut_projet": {
            "type": "string",
            "format": "date-time"
          },
          "date_fin_projet": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "projets_commentaires_count": {
            "type": "integer",
            "format": "int32"
          },
          "projets_documents_count": {
            "type": "integer",
            "format": "int32"
          },
          "projets_items_count": {
            "type": "integer",
            "format": "int32"
          },
          "projets_commentaires": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetCommentaireDto"
            },
            "nullable": true
          },
          "projets_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetDocumentDto"
            },
            "nullable": true
          },
          "projets_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetItemDto"
            },
            "nullable": true
          },
          "projets_projet_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetProjetTagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedProjetItemDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_projet_item": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "item": {
            "$ref": "#/components/schemas/ReadItemDto"
          },
          "projet": {
            "$ref": "#/components/schemas/ReadProjetDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedProjetProjetTagDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "projet_tag": {
            "$ref": "#/components/schemas/ReadProjetTagDto"
          },
          "projet": {
            "$ref": "#/components/schemas/ReadProjetDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedProjetTagDto": {
        "type": "object",
        "properties": {
          "id_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "nom_projet_tag": {
            "type": "string",
            "nullable": true
          },
          "poids_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "projets_projet_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "projets_projet_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetProjetTagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedStoreDto": {
        "type": "object",
        "properties": {
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "nom_store": {
            "type": "string",
            "nullable": true
          },
          "xlength_store": {
            "type": "integer",
            "format": "int32"
          },
          "ylength_store": {
            "type": "integer",
            "format": "int32"
          },
          "mqtt_name_store": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "boxs_count": {
            "type": "integer",
            "format": "int32"
          },
          "leds_count": {
            "type": "integer",
            "format": "int32"
          },
          "stores_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "boxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadBoxDto"
            },
            "nullable": true
          },
          "leds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadLedDto"
            },
            "nullable": true
          },
          "stores_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadStoreTagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedStoreTagDto": {
        "type": "object",
        "properties": {
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "tag": {
            "$ref": "#/components/schemas/ReadTagDto"
          },
          "store": {
            "$ref": "#/components/schemas/ReadStoreDto"
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedTagDto": {
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "nom_tag": {
            "type": "string",
            "nullable": true
          },
          "poids_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "stores_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "items_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "boxs_tags_count": {
            "type": "integer",
            "format": "int32"
          },
          "stores_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadStoreTagDto"
            },
            "nullable": true
          },
          "items_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadItemTagDto"
            },
            "nullable": true
          },
          "boxs_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadBoxTagDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadExtendedUserDto": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "integer",
            "format": "int32"
          },
          "nom_user": {
            "type": "string",
            "nullable": true
          },
          "prenom_user": {
            "type": "string",
            "nullable": true
          },
          "email_user": {
            "type": "string",
            "nullable": true
          },
          "role_user": {
            "$ref": "#/components/schemas/UserRole"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "projets_commentaires_count": {
            "type": "integer",
            "format": "int32"
          },
          "commands_commentaires_count": {
            "type": "integer",
            "format": "int32"
          },
          "projets_commentaires": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadProjetCommentaireDto"
            },
            "nullable": true
          },
          "commands_commentaires": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadCommandCommentaireDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReadIADto": {
        "type": "object",
        "properties": {
          "id_ia": {
            "type": "integer",
            "format": "int32"
          },
          "nom_ia": {
            "type": "string",
            "nullable": true
          },
          "description_ia": {
            "type": "string",
            "nullable": true
          },
          "trained_ia": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadImgDto": {
        "type": "object",
        "properties": {
          "id_img": {
            "type": "integer",
            "format": "int32"
          },
          "nom_img": {
            "type": "string",
            "nullable": true
          },
          "url_picture_img": {
            "type": "string",
            "nullable": true
          },
          "url_thumbnail_img": {
            "type": "string",
            "nullable": true
          },
          "description_img": {
            "type": "string",
            "nullable": true
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadItemBoxDto": {
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_item_box": {
            "type": "integer",
            "format": "int32"
          },
          "seuil_max_item_item_box": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadItemDocumentDto": {
        "type": "object",
        "properties": {
          "id_item_document": {
            "type": "integer",
            "format": "int32"
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "url_item_document": {
            "type": "string",
            "nullable": true
          },
          "name_item_document": {
            "type": "string",
            "nullable": true
          },
          "type_item_document": {
            "type": "string",
            "nullable": true
          },
          "size_item_document": {
            "type": "number",
            "format": "double"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadItemDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "reference_name_item": {
            "type": "string",
            "nullable": true
          },
          "friendly_name_item": {
            "type": "string",
            "nullable": true
          },
          "seuil_min_item": {
            "type": "integer",
            "format": "int32"
          },
          "description_item": {
            "type": "string",
            "nullable": true
          },
          "id_img": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadItemTagDto": {
        "type": "object",
        "properties": {
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadLedDto": {
        "type": "object",
        "properties": {
          "id_led": {
            "type": "integer",
            "format": "int32"
          },
          "x_led": {
            "type": "integer",
            "format": "int32"
          },
          "y_led": {
            "type": "integer",
            "format": "int32"
          },
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "mqtt_led_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetCommentaireDto": {
        "type": "object",
        "properties": {
          "id_projet_commentaire": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_user": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contenu_projet_commentaire": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetDocumentDto": {
        "type": "object",
        "properties": {
          "id_projet_document": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "url_projet_document": {
            "type": "string",
            "nullable": true
          },
          "name_projet_document": {
            "type": "string",
            "nullable": true
          },
          "type_projet_document": {
            "type": "string",
            "nullable": true
          },
          "size_projet_document": {
            "type": "number",
            "format": "double"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "nom_projet": {
            "type": "string",
            "nullable": true
          },
          "description_projet": {
            "type": "string",
            "nullable": true
          },
          "url_projet": {
            "type": "string",
            "nullable": true
          },
          "status_projet": {
            "type": "string",
            "nullable": true
          },
          "date_debut_projet": {
            "type": "string",
            "format": "date-time"
          },
          "date_fin_projet": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetItemDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_item": {
            "type": "integer",
            "format": "int32"
          },
          "qte_projet_item": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetProjetTagDto": {
        "type": "object",
        "properties": {
          "id_projet": {
            "type": "integer",
            "format": "int32"
          },
          "id_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadProjetTagDto": {
        "type": "object",
        "properties": {
          "id_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "nom_projet_tag": {
            "type": "string",
            "nullable": true
          },
          "poids_projet_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadStoreCompleteDto": {
        "type": "object",
        "properties": {
          "store": {
            "$ref": "#/components/schemas/ReadStoreDto"
          },
          "leds": {
            "$ref": "#/components/schemas/ReadBulkLedDto"
          },
          "boxs": {
            "$ref": "#/components/schemas/ReadBulkBoxDto"
          }
        },
        "additionalProperties": false
      },
      "ReadStoreDto": {
        "type": "object",
        "properties": {
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "nom_store": {
            "type": "string",
            "nullable": true
          },
          "xlength_store": {
            "type": "integer",
            "format": "int32"
          },
          "ylength_store": {
            "type": "integer",
            "format": "int32"
          },
          "mqtt_name_store": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadStoreTagDto": {
        "type": "object",
        "properties": {
          "id_store": {
            "type": "integer",
            "format": "int32"
          },
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadTagDto": {
        "type": "object",
        "properties": {
          "id_tag": {
            "type": "integer",
            "format": "int32"
          },
          "nom_tag": {
            "type": "string",
            "nullable": true
          },
          "poids_tag": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReadUserDto": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "integer",
            "format": "int32"
          },
          "nom_user": {
            "type": "string",
            "nullable": true
          },
          "prenom_user": {
            "type": "string",
            "nullable": true
          },
          "email_user": {
            "type": "string",
            "nullable": true
          },
          "role_user": {
            "$ref": "#/components/schemas/UserRole"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "required": [
          "email",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "token": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SessionDto": {
        "type": "object",
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "is_revoked": {
            "type": "boolean"
          },
          "auth_method": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by_ip": {
            "type": "string",
            "nullable": true
          },
          "revoked_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revoked_by_ip": {
            "type": "string",
            "nullable": true
          },
          "revoked_reason": {
            "type": "string",
            "nullable": true
          },
          "id_user": {
            "type": "integer",
            "format": "int32"
          },
          "first_created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SsoLoginRequest": {
        "required": [
          "code",
          "state"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SsoUrlResponse": {
        "type": "object",
        "properties": {
          "authUrl": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccessTokenDto": {
        "type": "object",
        "properties": {
          "revoked_reason": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBoxByStoreDto": {
        "type": "object",
        "properties": {
          "xstart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ystart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "xend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "yend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBulkBoxByStoreDto": {
        "type": "object",
        "properties": {
          "id_box": {
            "type": "integer",
            "format": "int32"
          },
          "xstart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ystart_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "xend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "yend_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "new_id_store": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBulkLedByStoreDto": {
        "type": "object",
        "properties": {
          "id_led": {
            "type": "integer",
            "format": "int32"
          },
          "x_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "y_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mqtt_led_id": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCameraDto": {
        "type": "object",
        "properties": {
          "nom_camera": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "url_camera": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "user_camera": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "mdp_camera": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommandCommentaireDto": {
        "type": "object",
        "properties": {
          "contenu_command_commentaire": {
            "maxLength": 455,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommandDocumentDto": {
        "type": "object",
        "properties": {
          "name_command_document": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommandDto": {
        "type": "object",
        "properties": {
          "prix_command": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "url_command": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "status_command": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "date_command": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_livraison_command": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCommandItemDto": {
        "type": "object",
        "properties": {
          "qte_command_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "prix_command_item": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateIADto": {
        "type": "object",
        "properties": {
          "nom_ia": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "description_ia": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateImgDto": {
        "type": "object",
        "properties": {
          "nom_img": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "description_img": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateItemBoxDto": {
        "type": "object",
        "properties": {
          "qte_item_box": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seuil_max_item_item_box": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateItemDocumentDto": {
        "type": "object",
        "properties": {
          "name_item_document": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateItemDto": {
        "type": "object",
        "properties": {
          "reference_name_item": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "friendly_name_item": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "seuil_min_item": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description_item": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "id_img": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLedByStoreDto": {
        "type": "object",
        "properties": {
          "x_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "y_led": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mqtt_led_id": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjetCommentaireDto": {
        "type": "object",
        "properties": {
          "contenu_projet_commentaire": {
            "maxLength": 455,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjetDocumentDto": {
        "type": "object",
        "properties": {
          "name_projet_document": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjetDto": {
        "type": "object",
        "properties": {
          "nom_projet": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "description_projet": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "url_projet": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "status_projet": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "date_debut_projet": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_fin_projet": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjetItemDto": {
        "type": "object",
        "properties": {
          "qte_projet_item": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjetTagDto": {
        "type": "object",
        "properties": {
          "nom_projet_tag": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "poids_projet_tag": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStoreCompleteDto": {
        "type": "object",
        "properties": {
          "store": {
            "$ref": "#/components/schemas/UpdateStoreDto"
          },
          "boxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBulkBoxByStoreDto"
            },
            "nullable": true
          },
          "leds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBulkLedByStoreDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStoreDto": {
        "type": "object",
        "properties": {
          "nom_store": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "xlength_store": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ylength_store": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mqtt_name_store": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTagDto": {
        "type": "object",
        "properties": {
          "nom_tag": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "poids_tag": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "required": [
          "current_mdp_user"
        ],
        "type": "object",
        "properties": {
          "nom_user": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "prenom_user": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "email_user": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "mdp_user": {
            "type": "string",
            "nullable": true
          },
          "role_user": {
            "$ref": "#/components/schemas/UserRole"
          },
          "current_mdp_user": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}