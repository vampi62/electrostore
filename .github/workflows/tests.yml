name: tests

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch that triggered this workflow.'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch that triggered this workflow.'
        required: true
        type: string

jobs:
  test-api:
    name: tests - API
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./electrostoreAPI
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Set up C#
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Run tests and collect coverage (OpenCover)
      run: |
        dotnet test ../tests/electrostoreAPI \
          --collect "XPlat Code Coverage" \
          --logger "trx;LogFileName=test-results.trx" \
          --results-directory ./TestResults \
          -- \
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    - name: Run SonarQube scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        PROJECT_KEY: "${{ inputs.branch }}-electrostore-api"
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"$PROJECT_KEY" \
          /d:sonar.host.url="$SONAR_HOST_URL" \
          /d:sonar.token="$SONAR_TOKEN" \
          /d:sonar.exclusions="**/Migrations/**" \
          /d:sonar.cpd.exclusions="**/DTO/**,**/Models/**" \
          /d:sonar.cs.vstest.reportsPaths=../electrostoreAPI/TestResults/*.trx \
          /d:sonar.cs.opencover.reportsPaths=../electrostoreAPI/TestResults/**/coverage.opencover.xml
        dotnet build
        dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"

  test-front:
    name: tests - FRONT
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./electrostoreFRONT
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install
    - name: Install test dependencies
      run: cd ../tests/electrostoreFRONT && npm install
    - name: Run unit tests with coverage
      run: cd ../tests/electrostoreFRONT && npm run test:unit -- --coverage --coverage.reporter=lcov
    - name: Cypress run
      env:
        VITE_API_URL: http://localhost/vite_api_url_placeholder/api
      uses: cypress-io/github-action@v6
      with:
        start: npm run dev
        wait-on: 'http://localhost:5173'
        wait-on-timeout: 30
        working-directory: ./tests/electrostoreFRONT
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: tests/electrostoreFRONT/cypress/screenshots
    - name: SonarScanner
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=${{ inputs.branch }}-electrostore-front
          -Dsonar.projectName=${{ inputs.branch }}-electrostore-front
          -Dsonar.sources=electrostoreFRONT
          -Dsonar.javascript.lcov.reportPaths=tests/electrostoreFRONT/coverage/lcov.info
          -Dsonar.cfamily.cache.enabled=false

  test-IA:
    name: tests - IA
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./electrostoreIA
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r ../tests/electrostoreIA/requirements.txt
    - name: Run tests with coverage
      run: |
        python -m pytest ../tests/electrostoreIA --cov=electrostoreIA --cov-report=xml:coverage.xml
    - name: SonarScanner
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=${{ inputs.branch }}-electrostore-ia
          -Dsonar.projectName=${{ inputs.branch }}-electrostore-ia
          -Dsonar.sources=electrostoreIA
          -Dsonar.python.coverage.reportPaths=electrostoreIA/coverage.xml
          -Dsonar.cfamily.cache.enabled=false
